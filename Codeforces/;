#include <bits/stdc++.h>

using namespace std;

#define debug(x) cout << "[" <<  #x << " " << x << "] ";

#define ar array
#define ll long long
#define ld long double
#define sz(x) ((int)x.size())
#define all(a) (a).begin(), (a).end()

typedef vector<int> vi;
typedef pair<int,int> pi;

const int MAX_N = 2e5 + 5;
const ll MOD = 1e9 + 7;
const ll INF = 1e9;
const ld EPS = 1e-9;



void solve() {
    string s1,s2;
    cin >> s1 >> s2;
    int n = (int)s1.size();
    vector<pair<int,int>> add(MAX_N,{0,0});

    int eq = 0;
    int size = n;
    for(int i=0; i<n; i++){
        if(s1[i] == s2[i])eq++;
    }
    int t,q;
    cin >> t >> q;
    for(int i=0; i<q; i++){
        int mode;
        cin >> mode;
        size += add[i].first;
        eq += add[i].second;
        if(mode == 1){
            int pos;
            cin >> pos;
            --pos;
            size--;
            add[i + t] = {1,s1[pos] == s2[pos]};
        }
        if(mode == 2){
            int no1,no2,pos1,pos2;
            cin >> no1 >> pos1 >> no2 >> pos2;
            --pos1;
            --pos2;
            int eq1 = (s1[pos1] == s2[pos1]);
            int eq2 = (s1[pos2] == s2[pos2]);
            if(no1 != no2){
                swap(s1[pos1],s2[pos2]);
            }
            else if(no1 == 1){
                swap(s1[pos1], s1[pos2]);
            }
            else{
                swap(s2[pos1], s2[pos2]);
            }
            int eq1n = (s1[pos1] == s2[pos1]);
            int eq2n = (s1[pos2] == s2[pos2]);
            eq += (eq1n - eq1);
            eq += (eq2n - eq2);
        }
        if(mode == 3){
            puts((size == eq ? "YES" : "NO"));
        }
    }
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int tc = 1;
    cin >> tc;
    for (int t = 1; t <= tc; t++) {
        // cout << "Case #" << t << ": ";
        solve();
    }
}
